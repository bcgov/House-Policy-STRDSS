name: Deploy Test Environment

on:
  push:
    tags:
    - v*.*.*

jobs:
  docker-build-backend:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Build Docker image
      run: cd server && docker build -t strdss-backend -f Dockerfile .

    - name: Tag Docker image
      run: |
        vtag=${{ github.ref_name }}
        docker tag strdss-backend artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-backend:${vtag//v}

    - name: Push Docker image to Artifactory
      run: |
        vtag=${{ github.ref_name }}
        docker login artifacts.developer.gov.bc.ca -u ${{ secrets.JFROG_USERNAME }} -p ${{ secrets.JFROG_PASSWORD }}
        docker push artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-backend:${vtag//v}

  docker-build-hangfire:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Build Docker image
      run: cd server && docker build -t strdss-hangfire -f Dockerfile.hangfire .

    - name: Tag Docker image
      run: |
        vtag=${{ github.ref_name }}
        docker tag strdss-hangfire artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-hangfire:${vtag//v}

    - name: Push Docker image to Artifactory
      run: |
        vtag=${{ github.ref_name }}
        docker login artifacts.developer.gov.bc.ca -u ${{ secrets.JFROG_USERNAME }} -p ${{ secrets.JFROG_PASSWORD }}
        docker push artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-hangfire:${vtag//v}
      
  docker-build-frontend:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Build Docker image
      run: cd frontend && docker build -t strdss-frontend -f Dockerfile .

    - name: Tag Docker image
      run: |
        vtag=${{ github.ref_name }}
        docker tag strdss-frontend artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-frontend:${vtag//v}

    - name: Push Docker image to Artifactory
      run: |
        vtag=${{ github.ref_name }}
        docker login artifacts.developer.gov.bc.ca -u ${{ secrets.JFROG_USERNAME }} -p ${{ secrets.JFROG_PASSWORD }}
        docker push artifacts.developer.gov.bc.ca/sf4a-strdss/strdss-frontend:${vtag//v}

  deploy:
    needs: [docker-build-frontend, docker-build-backend, docker-build-hangfire]
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read
    environment:
      name: test
      url: https://test-strdata.apps.silver.devops.gov.bc.ca/

    steps:
    - uses: hmarr/debug-action@a701ed95a46e6f2fb0df25e1a558c16356fae35a
    - uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5
      with:
        ref: main # one source of truth for CI/CD pipeline

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@9b79eb6d8ec51bce42cb4e77f0a174fc80cf3cb9
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: f4a30d-dev # dev and test live in the same 'DEV' namespace
        insecure_skip_tls_verify: true

    - name: Deploy apps with Helm chart
      run: |
        vtag=${{ github.ref_name }}
        make upgrade \
        NAMESPACE=f4a30d-dev \
        NAME=strdss-test \
        ENV_NAME=test \
        IMAGE_TAG_FRONTEND=${vtag//v} \
        IMAGE_TAG_BACKEND=${vtag//v} \
        IMAGE_TAG_HANGFIRE=${vtag//v} \
      working-directory: ./helm/main